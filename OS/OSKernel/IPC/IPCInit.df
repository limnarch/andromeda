//
// Initialization of the MINTIA ipc subsystem.
//

#include "<df>/dragonfruit.h"

#include "<inc>/HALLog.h"
#include "<inc>/HALCPU.h"
#include "<inc>/HALArgs.h"
#include "<inc>/HALMap.h"

#include "<inc>/Kernel.h"

#include "<inc>/Executive.h"

#include "<inc>/Memory.h"

#include "<inc>/Object.h"

#include "<inc>/Security.h"

#include "<inc>/Process.h"

#include "<inc>/IO.h"

#include "<ll>/OSDLL/OS.h"

#include "<inc>/IPC.h"

var IPCPortObjectType 0
public IPCPortObjectType

buffer IPCGlobalMutex KeMutex_SIZEOF

fn IPCGlobalLock { alertable -- ipl ok }
	fnsection "PAGE$text"

	KERNELMODE // waitmode
	alertable@ // alertable
	OSWAIT_TIMEOUTINFINITE // timeout
	IPCGlobalMutex // object
	KeThreadWaitForObject ok!

	if (ok@)
		return
	end

	IPLAPC KeIPLRaise ipl!
end

fn IPCGlobalUnlock { ipl -- }
	fnsection "PAGE$text"

	ipl@ KeIPLLower

	0 // abandon
	IPCGlobalMutex // mutex
	KeMutexRelease drop
end

rosection "INIT$text"

fn IPCInitPhase1 { -- }
	fnsection "INIT$text"

	auto typeinit
	ObTypeInitializer_SIZEOF alloc typeinit!

	// initialize ObTypeInitializer fields

	typeinit@ ObTypeInitializerInitialize

	// create Port type

	auto ok

	auto type

	"Port" typeinit@ ObTypeInitializer_Name + !
	'Port' typeinit@ ObTypeInitializer_Tag + !
	0 typeinit@ ObTypeInitializer_BodySize + !
	pointerof IPCPortObjectDelete typeinit@ ObTypeInitializer_DeleteFunction + !
	pointerof IPCPortObjectOpen typeinit@ ObTypeInitializer_OpenFunction + !
	1 typeinit@ ObTypeInitializer_Paged + !
	typeinit@ ObTypeCreate ok! type!

	if (ok@)
		ok@ "IPCInitPhase1: couldn't create Port type (%i)\n" KeCrash
	end

	type@ IPCPortObjectType!

rosection "text"

	"IPCGlobalMutex" // name
	KERNELMODE // mode
	IPCGlobalMutex // mutex
	KeMutexInitialize

rosection "INIT$text"
end