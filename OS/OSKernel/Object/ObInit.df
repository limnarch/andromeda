//
// Initialization of the MINTIA object manager.
//

#include "<df>/dragonfruit.h"
#include "<inc>/HALLog.h"

#include "<inc>/Kernel.h"

#include "<inc>/Executive.h"

#include "<inc>/Security.h"

#include "<inc>/Object.h"

#include "<inc>/Memory.h"

#include "<inc>/Process.h"

#include "<ll>/OSDLL/OS.h"

var ObTypeObjectType 0
public ObTypeObjectType

var ObTypeDirectoryType 0
public ObTypeDirectoryType

var ObRootDirectoryObject 0
public ObRootDirectoryObject

var ObObjectTypesDirectoryObject 0
public ObObjectTypesDirectoryObject

buffer ObRootRwLock ExRwLock_SIZEOF
public ObRootRwLock

fn ObInitPhase0 { -- }
	auto ok

	auto idleproc
	KeProcessCurrent idleproc!

	// give the idle process (us) a handle table

	auto handletable

	idleproc@ // chargedprocess
	OBHANDLEENTRYSIZELOG // entrysizelog
	ExHandleTableCreate ok! handletable!

	if (ok@)
		"ObInitPhase0: couldn't allocate idle process handletable\n" KeCrash
	end

	handletable@ idleproc@ PsProcess_HandleTable + !

	auto type

	auto typeinit
	ObTypeInitializer_SIZEOF alloc typeinit!

	// initialize ObTypeInitializer fields

	typeinit@ ObTypeInitializerInitialize

	// create Type type

	"Type" typeinit@ ObTypeInitializer_Name + !
	'ObTy' typeinit@ ObTypeInitializer_Tag + !
	0 typeinit@ ObTypeInitializer_BodySize + !
	typeinit@ ObTypeCreate ok! type!

	if (ok@)
		ok@ "ObInitPhase0: couldn't create Type type (%i)\n" KeCrash
	end

	if (ObTypeObjectType@ ~~)
		"ObInitPhase0: couldn't create Type type\n" KeCrash
	end

	// create Directory type

	"Directory" typeinit@ ObTypeInitializer_Name + !
	'ObDr' typeinit@ ObTypeInitializer_Tag + !
	0 typeinit@ ObTypeInitializer_BodySize + !
	typeinit@ ObTypeCreate ok! type!

	if (ok@)
		ok@ "ObInitPhase0: couldn't create Directory type (%i)\n" KeCrash
	end

	type@ ObTypeDirectoryType!

	"ObRootRwLock" // name
	ObRootRwLock // rwlock
	ExRwLockInitialize
end

fn ObInitPhase1 { -- }
	auto handle
	auto ok

	// create root directory object

	ACCESS_OWNER_ALL ACCESS_GROUP_ALL | ACCESS_WORLD_READ | ACCESS_WORLD_EXEC | // permissions
	"OSRoot" // name
	OBFLAGS_PERMANENT // flags
	ObDirectoryCreateObject ok! ObRootDirectoryObject!

	if (ok@)
		ok@ "ObInitPhase1: couldn't create root directory object (%i)\n" KeCrash
	end

	ObRootDirectoryObject@ ObRootDirectoryObject@ ObHeader_SIZEOF - ObHeader_DirectoryObject + !

	// create type directory object

	ACCESS_OWNER_ALL ACCESS_GROUP_ALL | ACCESS_WORLD_READ | ACCESS_WORLD_EXEC | // permissions
	"ObjectTypes" // name
	OBFLAGS_PERMANENT // flags
	ObDirectoryCreateObject ok! ObObjectTypesDirectoryObject!

	if (ok@)
		ok@ "ObInitPhase1: couldn't create /ObjectTypes directory object (%i)\n" KeCrash
	end

	ObObjectTypesDirectoryObject@ ObHeader_SIZEOF - // object
	ObRootDirectoryObject@ // directory
	ObDirectoryInsertByPointers ok!

	if (ok@)
		ok@ "ObInitPhase1: couldn't insert /ObjectTypes directory object into root directory (%i)\n" KeCrash
	end

	auto typeobj
	ObTypeObjectType@ ObType_ObjectListHead + @ typeobj!

	while (typeobj@)
		typeobj@ // object
		ObObjectTypesDirectoryObject@ // directory
		ObDirectoryInsertByPointers ok!

		if (ok@)
			ok@ typeobj@ ObHeader_Name + @ "ObInitPhase1: couldn't insert type '%s' into /ObjectTypes (%i)\n" KeCrash
		end

		typeobj@ ObHeader_TypeListNext + @ typeobj!
	end
end

fn (ExHandleEnumFunction) ObHandleDestroyFunction { entryptr handle handletable -- ok }
	auto process
	handletable@ ExHandleTableHeader_ChargedProcess + @ process!

	if (DEBUGCHECKS)
		if (process@ ~~)
			"ObHandleDestroyFunction: handle table had no process\n" KeCrash
		end
	end

	handle@ OSHANDLEBITS << process@ ObObjectCloseProcess ok!

	if (DEBUGCHECKS)
		if (ok@)
			ok@ "ObHandleDestroyFunction: failed to close handle (%i)\n" KeCrash
		end
	end
end