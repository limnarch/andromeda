//
// Implements support routines for the file view cache.
//

#include "<df>/dragonfruit.h"

#include "<inc>/HALLog.h"
#include "<inc>/HALCPU.h"
#include "<inc>/HALMap.h"

#include "<inc>/Kernel.h"

#include "<inc>/Executive.h"

#include "<inc>/Memory.h"

#include "<inc>/Security.h"

#include "<inc>/Object.h"

#include "<inc>/IO.h"

#include "<inc>/Process.h"

#include "<inc>/ViewCache.h"

#include "<ll>/OSDLL/OS.h"

table MmBufferMappings[(VIEWSIZE FILEVIEWSHIFT >>)]
public MmBufferMappings

fn MmBufferMap { bcb -- }
	auto vaddr
	bcb@ VcBuffer_WindowAddress + @ vaddr!

	if (DEBUGCHECKS)
		if (vaddr@ VIEWSPACE < vaddr@ VIEWSPACEEND >= ||)
			vaddr@ "MmBufferMap: window not in VIEWSPACE (%x)\n" KeCrash
		end
	end

	auto ix
	vaddr@ VIEWSPACE - FILEVIEWSHIFT >> ix!

	if (DEBUGCHECKS)
		if ([ix@]MmBufferMappings@)
			"MmBufferMap: window already mapped\n" KeCrash
		end
	end

	bcb@ [ix@]MmBufferMappings!
end

fn MmBufferUnmap { bcb -- }
	auto vaddr
	bcb@ VcBuffer_WindowAddress + @ vaddr!

	if (DEBUGCHECKS)
		if (vaddr@ VIEWSPACE < vaddr@ VIEWSPACEEND >= ||)
			vaddr@ "MmBufferUnmap: window not in VIEWSPACE (%x)\n" KeCrash
		end
	end

	auto ix
	vaddr@ VIEWSPACE - FILEVIEWSHIFT >> ix!

	if (DEBUGCHECKS)
		if ([ix@]MmBufferMappings@ ~~)
			"MmBufferUnmap: window not mapped\n" KeCrash
		end
	end

	auto max
	vaddr@ FILEVIEWGRANULARITY + max!

	vaddr@ // startva
	max@ // endva
	PsSystemProcess@ // process
	MmWorkingSetTrimRange

	// we don't actually need to do anything else since the view cache maps
	// shared pages, whose PTEs are zeroed out when trimmed from the working
	// set.

	if (DEBUGCHECKS)
		0 [ix@]MmBufferMappings!
	end
end

fn MmBufferTruncate { offset bcb -- }
	auto vaddr
	bcb@ VcBuffer_WindowAddress + @ vaddr!

	if (DEBUGCHECKS)
		if (vaddr@ VIEWSPACE < vaddr@ VIEWSPACEEND >= ||)
			vaddr@ "MmBufferUnmap: window not in VIEWSPACE (%x)\n" KeCrash
		end
	end

	auto max
	vaddr@ FILEVIEWGRANULARITY + max!

	vaddr@ offset@ + // startva
	max@ // endva
	PsSystemProcess@ // process
	MmWorkingSetTrimRange
end

fn MmBufferDirty { bcb -- }
	auto flags
	PTE_V flags!

#ifndef DIRTY_BIT_CAUSES_FAULT
	PTE_W flags |=
#endif

	flags@ // flags
	bcb@ VcBuffer_WindowAddress + @ // startva
	bcb@ VcBuffer_WindowAddress + @ FILEVIEWGRANULARITY + // endva
	PsSystemProcess@ // process
	MmWorkingSetRemap
end