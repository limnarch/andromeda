#include "<df>/dragonfruit.h"

#include "<inc>/HALLog.h"
#include "<inc>/HALCPU.h"
#include "<inc>/HALDebug.h"

#include "<inc>/Kernel.h"

#include "<inc>/Executive.h"

#include "<inc>/Object.h"

#include "<inc>/Memory.h"

#include "<inc>/Security.h"

#include "<inc>/Process.h"

#include "<ll>/OSDLL/OS.h"

fn OSThreadSleep { ms -- ok }
	ms@ // ms
	USERMODE // waitmode
	1 // alertable
	KeThreadSleep ok!
end

fn OSThreadCreate { context startfunc creationflags permissions name processhandle -- threadhandle ok }
	auto kname
	OBNAMEMAX // max
	name@ // string
	ExCallGetString ok! kname!

	if (ok@)
		return
	end

	startfunc@ // context1
	context@ // context2
	pointerof PsThreadUserEntry // startfunc
	creationflags@ // creationflags
	permissions@ // permissions
	kname@ // name
	processhandle@ // processhandle
	PsThreadCreate ok! threadhandle!

	kname@ ExCallFreeString
end

fn OSThreadTerminate { status threadhandle -- ok }
	status@ threadhandle@ PsThreadTerminate ok!
end