#include "<df>/dragonfruit.h"

#include "<inc>/HALLog.h"

#include "<inc>/Kernel.h"

#include "<inc>/Executive.h"

#include "<inc>/Security.h"

#include "<inc>/Process.h"

buffer KeProcessKernelThreadIdle PsThread_SIZEOF

buffer KeThreadQuantumDPC KeDPC_SIZEOF
public KeThreadQuantumDPC

extern KeIdleThread { -- }

extern KeThreadQuantumDPCFunction { -- }

buffer KeIdleThreadStack KETHREADSTACKSIZE

fn KeThreadInit { -- }
	0 // context1
	0 // context2
	pointerof KeIdleThread // startfunc
	KeProcessIdleProcess // process
	KeIdleThreadStack // kstack
	"idle" // name
	KeProcessKernelThreadIdle // thread
	KeThreadInitialize

	PRIORITY_IDLE KeProcessKernelThreadIdle KeThread_Priority + !

	THREADSTATUS_READY KeProcessKernelThreadIdle KeThread_Status + !

	QUEUEBACK KeProcessKernelThreadIdle KeThreadEnqueue

	pointerof KeThreadQuantumDPCFunction // function
	KeThreadQuantumDPC // dpc
	KeDPCInitialize
end