//
// Initialization for the IDLE thread and quantum expiration DPC.
//

#include "<df>/dragonfruit.h"

#include "<inc>/HALLog.h"

#include "<inc>/Kernel.h"

#include "<inc>/Executive.h"

#include "<inc>/Security.h"

#include "<inc>/Process.h"

#include "<ll>/OSDLL/OS.h"

#include "KeInternal.h"

buffer KiIdleThread PsThread_SIZEOF
public KiIdleThread

buffer KiIdleThreadStack KETHREADSTACKSIZE

rosection "INIT$text"

fn KiThreadInit { -- }
	fnsection "INIT$text"

	0 // context1
	0 // context2
	pointerof KiIdleThreadEntry // startfunc
	KeIdleProcess // process
	KiIdleThreadStack // kstack
	"IDLE" // name
	KiIdleThread // thread
	KeThreadInitialize

	PRIORITY_IDLE KiIdleThread KeThread_PriorityB + sb
end