//
// Implements file view creation and deletion APIs.
// All of the APIs in this file that take BCBs as parameters treat LARGE and
// NORMAL BCBs "as you would expect".
//

#include "<df>/dragonfruit.h"

#include "<inc>/HALLog.h"
#include "<inc>/HALRTC.h"
#include "<inc>/HALCPU.h"
#include "<inc>/HALDebug.h"
#include "<inc>/HALMap.h"

#include "<inc>/Kernel.h"

#include "<inc>/Executive.h"

#include "<inc>/Memory.h"

#include "<inc>/Object.h"

#include "<inc>/IO.h"

#include "<inc>/FSRTL.h"

#include "<inc>/ViewCache.h"

#include "<ll>/OSDLL/OS.h"

fn VcFileMap { offset length fileobject -- vaddr bcb ok }
	// expects FCB to be locked either shared or exclusive; truncation must be
	// blocked out.

	auto fcb
	fileobject@ IOFile_FileControlBlock + @ fcb!

	auto cacheblock
	fcb@ IOFileControlBlock_CacheInfoBlock + @ cacheblock!

	if (DEBUGCHECKS)
		if (cacheblock@ ~~)
			"VcFileMap: no cacheblock\n" KeCrash
		end
	end

	auto large
	0 large!

	if (length@)
		if (length@ FILEVIEWGRANULARITY >)
			1 large!
		end elseif (offset@ FILEVIEWNUMBERMASK &
			offset@ length@ + 1 - FILEVIEWNUMBERMASK & ~=)
			1 large!
		end
	end

	if (large@)
		// allocate a LARGE bcb and map it into POOLSPACE.

		offset@ // offset
		length@ // length
		fileobject@ // fcb
		VcBufferLargeMap ok! bcb! vaddr!
	end else
		offset@ // offset
		fcb@ // fcb
		VcFileControlBlockMap ok! bcb! vaddr!
	end
end

fn VcFileControlBlockMap { offset fcb -- vaddr bcb ok }
	// map a fixed sized window of the file.

	offset@ FILEVIEWNUMBERMASK & // offset
	fcb@ // fcb
	VcBufferGet ok! bcb!

	if (ok@)
		return
	end

	bcb@ VcBuffer_WindowAddress + @ vaddr!
	offset@ FILEVIEWOFFSETMASK & vaddr +=
end