#include "<df>/dragonfruit.h"

#include "<inc>/HALLog.h"
#include "<inc>/HALCPU.h"
#include "<inc>/HALArgs.h"
#include "<inc>/HALMap.h"
#include "<inc>/HALConsole.h"

#include "<inc>/Kernel.h"

#include "<inc>/Executive.h"

#include "<inc>/Memory.h"

#include "<inc>/Object.h"

#include "<inc>/Security.h"

#include "<inc>/Process.h"

#include "<inc>/IO.h"

#include "<inc>/Video.h"

#include "<inc>/Console.h"

#include "<ll>/OSDLL/OS.h"

fn OSSetSystemConsole { filehandle -- ok }
	SYSTEMPERMISSION_SETCONSOLE // permission
	SeUserCurrentGet // user
	SeUserCheckPermission ok!

	if (ok@)
		return
	end

	auto obj
	auto access

	IOFileTypeObject@ // type
	filehandle@ // handle
	ObObjectReferenceByHandle ok! obj! access!

	if (ok@)
		return
	end

	access@ ACCESS_READ ACCESS_WRITE | SeCheckAccess ok!

	if (ok@)
		obj@ ObObjectDereferenceByPointer drop

		return
	end

	auto consoleobject
	obj@ IOFile_FileControlBlock + @ IOFileControlBlock_DeviceObject + @ consoleobject!

	if (consoleobject@ ~~)
		obj@ ObObjectDereferenceByPointer drop
		STATUS_INVALID_OBJECT_TYPE ok!
		return
	end

	if (consoleobject@ IODevice_IsAConsole + @ ~~)
		obj@ ObObjectDereferenceByPointer drop
		STATUS_INVALID_OBJECT_TYPE ok!
		return
	end

	consoleobject@ ExSystemConsoleSet

	obj@ ObObjectDereferenceByPointer drop
end