#include "<df>/dragonfruit.h"

#include "<ll>/OSDLL/OS.h"

fn Usage { -- }
	"usage: mv source target\n" OSGetStdErr FPrintf
end

fn Main { ... -- ret }
	if (argc@ 3 ~=)
		Usage
		-1 OSExit
	end

	0 ret!

	auto srcdirname
	OSFILEPATHMAX alloc srcdirname!

	auto destdirname
	OSFILEPATHMAX alloc destdirname!

	auto ok

	[1]argv@ // path
	srcdirname@ // dirname
	OSFILEPATHMAX // bufsize
	OSDirectoryName ok!

	if (ok@)
		ok@ OSStatusGetName [1]argv@ "mv: %s: %s\n" OSError
	end

	auto srcname
	[1]argv@ OSLastComponent srcname!

	if (srcname@ "/" strcmp srcname@ gb ':' == ||)
		// so that the syscall produces the expected error
		"." srcname!
	end

	auto destname

	// XXX can buffer underflow if the length of [2]argv is 0.
	// but this is a user program and the user is obviously trying to break
	// something anyway, so we don't care.

	if ([2]argv@ [2]argv@ strlen + 1 - gb '/' ==)
		// the destination argument constitutes the whole path.
		srcname@ destname!
		[2]argv@ destdirname!
	end else
		[2]argv@ // path
		destdirname@ // dirname
		OSFILEPATHMAX // bufsize
		OSDirectoryName ok!

		if (ok@)
			ok@ OSStatusGetName [2]argv@ "mv: %s: %s\n" OSError
		end

		[2]argv@ OSLastComponent destname!

		if (destname@ "/" strcmp destname@ gb ':' == ||)
			// so that the syscall produces the expected error
			"." destname!
		end
	end

	auto srcdirhandle
	0 // flags
	ACCESS_WRITE ACCESS_EXEC | // access
	srcdirname@ // dirname
	0 // ftype
	OSFileOpen ok! srcdirhandle!

	if (ok@)
		ok@ OSStatusGetName srcdirname@ "mv: %s: %s\n" OSError
	end

	auto destdirhandle
	0 // flags
	ACCESS_WRITE ACCESS_EXEC | // access
	destdirname@ // dirname
	0 // ftype
	OSFileOpen ok! destdirhandle!

	if (ok@)
		ok@ OSStatusGetName destdirname@ "mv: %s: %s\n" OSError
	end

	srcname@ // srcname
	srcdirhandle@ // srcfilehandle
	destname@ // destname
	destdirhandle@ // destfilehandle
	OSDirectoryRename ok!

	if (ok@)
		ok@ OSStatusGetName destname@ srcname@ "mv: %s -> %s: %s\n" OSError
	end

	destdirhandle@ OSClose drop
	srcdirname@ OSClose drop
end