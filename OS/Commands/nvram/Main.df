#include "<df>/dragonfruit.h"

#include "<ll>/OSDLL/OS.h"

fn private Usage { -- }
	"usage: nvram [[#]variable[=value]]\n" OSGetStdErr FPrintf
end

fn PrintAllVariables { -- }
	auto index
	-1 index!

	auto ok
	0 ok!

	auto query
	OSNvramQuery_SIZEOF alloc query!

	while (1)
		query@ // query
		index@ // index
		OSNvramVariableRead ok! index!

		if (ok@)
			if (ok@ STATUS_NO_VARIABLE ==)
				break
			end

			ok@ OSStatusGetName "nvram: failed to read nvram: %s\n" OSError
		end

		query@ OSNvramQuery_Contents +
		query@ OSNvramQuery_Name +
		"%s = %s\n" Printf
	end
end

fn Main { ... -- ret }
	0 ret!

	if (argc@ 2 <)
		PrintAllVariables

		return
	end

	if (argc@ 2 ~=)
		Usage

		-1 OSExit
	end

	auto set
	0 set!

	auto delete
	0 delete!

	auto varstring
	[1]argv@ varstring!

	if (varstring@ gb '^' ==)
		1 delete!
		1 set!
		1 varstring +=
	end

	auto query
	OSNvramQuery_SIZEOF alloc query!

	auto dest
	query@ OSNvramQuery_Name + dest!

	while (varstring@ gb)
		if (varstring@ gb '=' ==)
			1 set!
			1 varstring +=
			break
		end

		varstring@ gb dest@ sb

		1 dest +=
		1 varstring +=
	end

	0 dest@ sb

	query@ OSNvramQuery_Contents + dest!

	while (varstring@ gb)
		varstring@ gb dest@ sb

		1 dest +=
		1 varstring +=
	end

	0 dest@ sb

	if (set@)
		delete@ // delete
		query@ // query
		OSNvramVariableSet ret!

		if (ret@)
			ret@ OSStatusGetName
			query@ OSNvramQuery_Name +
			"nvram: couldn't set %s: %s\n" OSError
		end
	end else
		query@ OSNvramVariableQuery ret!

		if (ret@)
			ret@ OSStatusGetName
			query@ OSNvramQuery_Name +
			"nvram: couldn't query %s: %s\n" OSError
		end

		query@ OSNvramQuery_Contents + "%s\n" Printf
	end
end