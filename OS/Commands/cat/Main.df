#include "<df>/dragonfruit.h"

#include "<ll>/OSDLL/OS.h"

fn Usage { -- }
	"usage: cat [-u] [file ...]\n" OSGetStdErr FPrintf
end

var UFlag 0

fn Main { ... -- ret }
	0 ret!

	auto catfd
	auto ok

	auto i
	1 i!

	auto chk
	2 chk!

	if (argc@ 2 >=)
		auto sw
		[1]argv@ sw!

		if (sw@ gb '-' ==)
			2 i!
			3 chk!

			1 sw +=

			while (sw@ gb 0 ~=)
				if (sw@ gb 'u' ==)
					1 UFlag!
				end else
					Usage
					-1 OSExit
				end

				1 sw +=
			end
		end
	end

	if (argc@ chk@ >=)
		while (i@ argc@ <)
			if (UFlag@)
				OSFILEFLAG_NOCACHE // flags
				ACCESS_READ // access
				[i@]argv@ // path
				0 // ftype
				OSFileOpen ok! catfd!

				0 // purge
				catfd@ // handle
				OSFileFlush drop
			end else
				0 // flags
				ACCESS_READ // access
				[i@]argv@ // path
				0 // ftype
				OSFileOpen ok! catfd!
			end

			if (ok@)
				ok@ OSStatusGetName [i@]argv@ "cat: couldn't open %s: %s\n" OSError
			end

			[i@]argv@ catfd@ Cat

			catfd@ OSClose drop

			1 i +=
		end
	end else
		"<stdin>" OSGetStdIn Cat
	end
end

const CATUNIT 32768
buffer CatBuffer (CATUNIT OSPAGESIZE 2 / +)

fn Cat { name fd -- }
	auto buf
	CatBuffer OSPAGEOFFSETMASK + OSPAGENUMBERMASK & buf!

	auto bytes
	auto ok

	OSWAIT_TIMEOUTINFINITE // timeout
	0 // flags
	CATUNIT // length
	buf@ // buffer
	fd@ // filehandle
	OSFileRead ok! bytes!

	if (ok@)
		ok@ OSStatusGetName name@ "cat: couldn't read %s: %s\n" OSError
	end

	while (bytes@)
		auto byteswritten
		0 // flags
		bytes@ // length
		buf@ // buffer
		OSGetStdOut // filehandle
		OSFileWrite ok! byteswritten!

		if (ok@)
			ok@ OSStatusGetName "cat: couldn't write: %s\n" OSError
		end

		byteswritten@ bytes -=

		if (bytes@ ~~)
			OSWAIT_TIMEOUTINFINITE // timeout
			0 // flags
			CATUNIT // length
			buf@ // buffer
			fd@ // filehandle
			OSFileRead ok! bytes!

			if (ok@)
				ok@ OSStatusGetName name@ "cat: couldn't read %s: %s\n" OSError
			end
		end
	end
end