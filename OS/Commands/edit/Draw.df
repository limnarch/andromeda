#include "<df>/dragonfruit.h"

#include "<ll>/OSDLL/OS.h"

#include "Edit.h"

const SCREENROW 0

const UINORMAL 0

var UIMode -1

fn DrawAll { -- }
	TermResetColor

	1 TermSetCursorHidden

	0 ScreenHeight@ 1 - DrawScreen
	UINORMAL SetUIMode

	ScreenCursorX@ ScreenCursorY@ SCREENROW + TermSetCursorPosition

	0 TermSetCursorHidden

	TermFinishDrawing
end

fn DrawScreen { startrow endrow -- }
	0 SCREENROW TermSetCursorPosition

	auto line
	startrow@ ScreenLine_SIZEOF * ScreenLineTable@ + line!

	while (startrow@ endrow@ <=)
		auto piece
		line@ ScreenLine_StartPiece + @ piece!

		if (piece@ ~~)
			TermClearLineAll
			'\n' Putc

			1 startrow +=
			ScreenLine_SIZEOF line +=
			continue
		end

		auto length
		line@ ScreenLine_Length + @ length!

		auto offsetinpiece
		line@ ScreenLine_OffsetInPiece + @ offsetinpiece!

		auto pclength
		piece@ Piece_Length + @ offsetinpiece@ - pclength!

		auto lineoffset
		0 lineoffset!

		if (startrow@ ScreenCursorY@ ==)
			// cursor might be off to the side
			ScreenLinePosition@ TermWidth@ / TermWidth@ * lineoffset!
		end

		lineoffset@ length -=

		while (lineoffset@)
			// seek to the lineoffset

			if (pclength@ lineoffset@ <=)
				pclength@ lineoffset -=
				piece@ Piece_Next + @ piece!
				piece@ Piece_Length + @ pclength!
				0 offsetinpiece!
			end else
				lineoffset@ offsetinpiece!
				break
			end
		end

		auto long
		0 long!

		if (length@ TermWidth@ >)
			TermWidth@ length!
			1 long!
		end

		auto ptr
		offsetinpiece@ // offset
		piece@ // piece
		EditorBuffer@ // buffer
		BufferGetPointer ptr!

		while (length@)
			if (pclength@ ~~)
				piece@ Piece_Next + @ piece!
				piece@ Piece_Length + @ pclength!

				0 // offset
				piece@ // piece
				EditorBuffer@ // buffer
				BufferGetPointer ptr!
			end

			if (ptr@ gb '\n' ~=)
				ptr@ gb Putc
			end

			1 ptr +=
			1 pclength -=
			1 length -=
		end

		if (long@ ~~)
			TermClearLine
			'\n' Putc
		end

		1 startrow +=
		ScreenLine_SIZEOF line +=
	end
end

fn SetUIMode { uimode -- }
	if (uimode@ UIMode@ ~=)
		uimode@ UIMode!
		DrawUI
	end
end

fn DrawInstructions { -- }
	TermClearLineAll

	"  " Puts

	TermInvertColor
	"^C" Puts
	TermResetColor
	" Exit" Puts

	"   " Puts

	TermInvertColor
	"^S" Puts
	TermResetColor
	" Save" Puts

	'\n' Putc
end

fn DrawUI { -- }
	0 ScreenHeight@ SCREENROW + TermSetCursorPosition

	if (UIMode@ UINORMAL ==)
		DrawInstructions

		TermInvertColor

		auto left
		EditorFileName@ DrawTextCentered left!

		if (left@)
			1 left -=
		end

		while (left@)
			' ' Putc
			1 left -=
		end

		TermResetColor
	end
end

fn DrawTextCentered { text -- left }
	auto len
	text@ strlen len!

	auto toolong
	auto pad

	if (len@ 5 + TermWidth@ >)
		1 toolong!
		1 pad!
		TermWidth@ 5 - len!
	end else
		0 toolong!
		TermWidth@ 2 / len@ 2 / - pad!
	end

	TermWidth@ pad@ - len@ - left!

	while (pad@)
		' ' Putc
		1 pad -=
	end

	if (toolong@ ~~)
		text@ Puts
	end else
		while (len@)
			text@ gb Putc

			1 text +=
			1 len -=
		end

		"..." Puts
	end
end