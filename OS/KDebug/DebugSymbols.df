//
// Implements bootloader symbol table traversal.
//

#include "<df>/dragonfruit.h"

#include "<inc>/HALConsole.h"
#include "<inc>/HALLog.h"

#include "../OSLoader/OSLoaderGlobal.h"

externptr HALLoaderInfo

fn DebugGetSymbolByAddress { address dll -- symbase symname symbol ok }
	if (address@ dll@ ComDLL_Base + @ <)
		-1 ok!
		return
	end

	if (address@ dll@ ComDLL_End + @ >=)
		-1 ok!
		return
	end

	auto head
	dll@ ComDLL_HeadVAddr + @ head!

	auto sectiontable
	head@ XLOFFHeader_SectionTableOffset + @ head@ + sectiontable!

	head@ XLOFFHeader_SymbolTableOffset + @ head@ + symbol!

	auto i
	0 i!

	auto count
	head@ XLOFFHeader_SymbolCount + @ count!

	auto strtab
	head@ XLOFFHeader_StringTableOffset + @ head@ + strtab!

	auto lastsym
	0 lastsym!

	-1 ok!

	while (i@ count@ <)
		if (symbol@ XLOFFSymbol_TypeB + gb XLOFF_SYMTYPE_GLOBAL ==)
			auto sectionheader
			sectiontable@ symbol@ XLOFFSymbol_SectionIndexI + gi XLOFFSectionHeader_SIZEOF * + sectionheader!

			auto sbase
			symbol@ XLOFFSymbol_Value + @ sectionheader@ XLOFFSectionHeader_VirtualAddress + @ + sbase!

			if (address@ sbase@ >=)
				symbol@ XLOFFSymbol_NameOffset + @ symname!

				if (symname@ 0xFFFFFFFF ==)
					0 symname!
				end else
					strtab@ symname +=
				end

				symbol@ lastsym!
				sbase@ symbase!
			end elseif (address@ sbase@ <)
				if (lastsym@)
					0 ok!
				end

				lastsym@ symbol!

				return
			end
		end

		XLOFFSymbol_SIZEOF symbol +=
		1 i +=
	end

	if (lastsym@)
		0 ok!
	end

	lastsym@ symbol!
end

fn DebugGetSymbol { name dll -- symbol ok }
	auto head
	dll@ ComDLL_HeadVAddr + @ head!

	head@ XLOFFHeader_SymbolTableOffset + @ head@ + symbol!

	auto i
	0 i!

	auto count
	head@ XLOFFHeader_SymbolCount + @ count!

	auto strtab
	head@ XLOFFHeader_StringTableOffset + @ head@ + strtab!

	-1 ok!

	while (i@ count@ <)
		if (symbol@ XLOFFSymbol_TypeB + gb XLOFF_SYMTYPE_GLOBAL ==)
			auto sname
			symbol@ XLOFFSymbol_NameOffset + @ sname!

			if (sname@ 0xFFFFFFFF ~=)
				strtab@ sname +=

				if (sname@ name@ strcmp)
					0 ok!
					return
				end
			end
		end

		XLOFFSymbol_SIZEOF symbol +=
		1 i +=
	end
end

fn DebugGetSymbolAddress { name dll -- address ok }
	auto symbol
	name@ dll@ DebugGetSymbol ok! symbol!

	if (ok@)
		return
	end

	auto head
	dll@ ComDLL_HeadVAddr + @ head!

	auto sectionheader
	head@ XLOFFHeader_SectionTableOffset + @ head@ + sectionheader!

	symbol@ XLOFFSymbol_SectionIndexI + gi XLOFFSectionHeader_SIZEOF * sectionheader +=

	symbol@ XLOFFSymbol_Value + @ address!

	sectionheader@ XLOFFSectionHeader_VirtualAddress + @ address +=
end

fn DebugGetSymDLL { address -- dll symbase symname symbol ok }
	HALLoaderInfo@ LdrInfo_DLLListHead + @ dll!

	-1 ok!

	while (dll@)
		address@ // address
		dll@ // dll
		DebugGetSymbolByAddress ok! symbol! symname! symbase!

		if (ok@ ~~)
			return
		end

		dll@ ComDLL_Next + @ dll!
	end
end

fn DebugGetDLL { name -- dll }
	HALLoaderInfo@ LdrInfo_DLLListHead + @ dll!

	while (dll@)
		if (dll@ ComDLL_Name + @ name@ strcmp)
			return
		end

		dll@ ComDLL_Next + @ dll!
	end
end