#include "<ll>/OSDLL/OSContext.h"

asm "

.extern OSExit
.extern OSThreadExit
.extern DLLMainHL

.section text

; copy arguments table from OSPEB to stack and jump to entrypoint
; does not return

DLLMain:
.global DLLMain
	subi sp, sp, 4
	mov  long [sp], zero

	jal DLLMainHL
	nop

;a2 - program entry
;a1 - argv
;a0 - argc
DLLMainTrampoline:
.global DLLMainTrampoline
	mov  t0, sp
	mov  t1, a0
	mov  t3, zero

	sub  sp, sp, a0 LSH 2

.loop:
	beq  t1, .done

	mov  t2, long [a1]
	mov  long [sp + t3], t2

	addi a1, a1, 4
	addi t3, t3, 4
	subi t1, t1, 1
	b    .loop

.done:
	subi sp, sp, 4
	mov  long [sp], zero

	jalr lr, a2, 0

	j    OSExit

DLLThreadExit:
.global DLLThreadExit
	;return value is already in a0
	j    OSThreadExit

.extern DLLSignalDispatchHL
.extern DLLAPCDispatchHL

DLLSignalDispatch:
.global DLLSignalDispatch
	mov  t0, long [sp + OSContext_sp]
	mov  t1, long [sp + OSContext_epc]
	mov  t2, long [sp + OSContext_lr]

	subi sp, sp, 12
	mov  long [sp], t0
	mov  long [sp + 4], t1
	mov  long [sp + 8], t2

	jal  DLLSignalDispatchHL
	nop

DLLAPCDispatch:
.global DLLAPCDispatch
	mov  t0, long [sp + OSContext_sp]
	mov  t1, long [sp + OSContext_epc]
	mov  t2, long [sp + OSContext_lr]

	subi sp, sp, 12
	mov  long [sp], t0
	mov  long [sp + 4], t1
	mov  long [sp + 8], t2

	jal  DLLAPCDispatchHL
	nop

.section data

nonsense:
	.dl 0

.section bss

nonsense2:
	.dl 0

"