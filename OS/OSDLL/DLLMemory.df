//
// Implements memory query dumping.
//

#include "<df>/dragonfruit.h"

#include "<ll>/OSDLL/OSCalls.h"
#include "<ll>/OSDLL/OSMap.h"
#include "<ll>/OSDLL/OSAccess.h"
#include "<ll>/OSDLL/OSAbort.h"
#include "<ll>/OSDLL/OSObject.h"
#include "<ll>/OSDLL/OSStatus.h"
#include "<ll>/OSDLL/OSProcess.h"
#include "<ll>/OSDLL/OSFile.h"
#include "<ll>/OSDLL/OSSignal.h"
#include "<ll>/OSDLL/OSMemory.h"

#include "OSDLL.h"

fn OSMemoryInformationDump { query -- }
	query@ OSMemoryInformation_FileCachePageCount + @
	"       File pages: %9d " Printf

	auto evictables
	query@ OSMemoryInformation_EvictablePageCount + @
	query@ OSMemoryInformation_ModifiedPageCount + @ +
	evictables!

	auto pagesused
	query@ OSMemoryInformation_PageTotalCount + @
	query@ OSMemoryInformation_PageFreeCount + @ - pagesused!

	query@ OSMemoryInformation_PageTotalCount + @ OSPAGESHIFT << 1024 /
	pagesused@ evictables@ - OSPAGESHIFT << 1024 /
	"    Memory usage: %dKB / %dKB\n" Printf

	query@ OSMemoryInformation_AnonymousPageCount + @
	"       Anon pages: %9d " Printf

	query@ OSMemoryInformation_SwapPagePeakCount + @ OSPAGESHIFT << 1024 /
	query@ OSMemoryInformation_SwapPageTotalCount + @ OSPAGESHIFT << 1024 /
	query@ OSMemoryInformation_SwapPageUsedCount + @ OSPAGESHIFT << 1024 /
	"  Swapfile usage: %dKB / %dKB (%dKB peak)\n" Printf

	query@ OSMemoryInformation_ModifiedPageCount + @
	"      Dirty pages: %9d " Printf

	query@ OSMemoryInformation_WorkingSetPagePeakCount + @ OSPAGESHIFT << 1024 /
	query@ OSMemoryInformation_WorkingSetPageTotalCount + @ OSPAGESHIFT << 1024 /
	"Working set size: %dKB (%dKB peak)\n" Printf

	query@ OSMemoryInformation_PageInCount + @
	"         Page-ins: %9d " Printf

	query@ OSMemoryInformation_NonpagedPoolBytesUsedPeak + @ 1024 /
	query@ OSMemoryInformation_NonpagedPoolBytesUsedExternally + @ 1024 /
	query@ OSMemoryInformation_NonpagedPoolBytesUsedInternally + @ 1024 /
	"   Nonpaged pool: %dKB/%dKB (%dKB peak)\n" Printf

	query@ OSMemoryInformation_SwapPagesWritten + @
	query@ OSMemoryInformation_SwapPagesRead + @ +
	"          Swap IO: %9d " Printf

	query@ OSMemoryInformation_PagedPoolBytesUsedPeak + @ 1024 /
	query@ OSMemoryInformation_PagedPoolBytesUsedExternally + @ 1024 /
	query@ OSMemoryInformation_PagedPoolBytesUsedInternally + @ 1024 /
	"      Paged pool: %dKB/%dKB (%dKB peak)\n" Printf

	if (0)
		query@ OSMemoryInformation_CommitLimit + @
		query@ OSMemoryInformation_CommitUsage + @
		"  Commit usage:     %d / %d\n" Printf
	end

	if (0)
		query@ OSMemoryInformation_EvictableSlowPageCount + @
		query@ OSMemoryInformation_EvictableFastPageCount + @
		"  Evictable pages:  %d fast, %d slow\n" Printf
	end
end

fn OSSwapFileInformationDump { -- }
	auto query
	OSSwapFileInformation_SIZEOF alloc query!

	auto id
	0 id!

	while (1)
		auto ok
		query@ // query
		id@ // id
		OSSwapFileQuery ok!

		if (ok@)
			return
		end

		query@ OSSwapFileInformation_CurrentSize + @ OSPAGESHIFT << 1024 /
		query@ OSSwapFileInformation_UsedCount + @ OSPAGESHIFT << 1024 /
		query@ OSSwapFileInformation_MaximumSize + @ OSPAGESHIFT << 1024 /
		query@ OSSwapFileInformation_MinimumSize + @ OSPAGESHIFT << 1024 /
		query@ OSSwapFileInformation_Priority + @
		query@ OSSwapFileInformation_Name +
		"* %s: pri=%d, %dKB -> %dKB, %dKB / %dKB\n" Printf

		1 id +=
	end
end