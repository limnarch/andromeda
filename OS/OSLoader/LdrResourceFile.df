//
// Implements a generic resource file parser for OSLoader.
//

#include "<df>/dragonfruit.h"

#include "OSLoader.h"

buffer LdrResourceFileLineBuffer 256

fn LdrResourceFileParse { callback path device -- ok }
	auto file

	path@ // path
	device@ // device
	LdrFileOpen ok! file!

	if (ok@)
		return
	end

	// naively read the file byte-by-byte and call the callback for each
	// non-comment line.

	auto offset
	0 offset!

	auto lbp
	LdrResourceFileLineBuffer lbp!

	auto linelen
	0 linelen!

	auto incomment
	0 incomment!

	auto linestart
	1 linestart!

	auto buf
	file@ LdrFile_Size + @ LdrMemoryAllocate ok! buf!

	if (ok@)
		return
	end

	file@ LdrFile_Size + @ // length
	buf@ // buf
	offset@ // offset
	file@ // file
	LdrFileRead ok! drop

	if (ok@)
		return
	end

	auto count
	file@ LdrFile_Size + @ count!

	while (count@)
		auto c
		buf@ gb c!

		if (c@ '\n' ==)
			if (linelen@)
				0 lbp@ sb

				// call the callback

				LdrResourceFileLineBuffer // linebuf
				callback@ LdrResourceFileCallbackFunction
			end

			0 linelen!
			0 incomment!
			1 linestart!
			LdrResourceFileLineBuffer lbp!
		end elseif (incomment@ ~~)
			if (c@ '#' ==)
				while (linelen@ lbp@ 1 - gb ' ' == &&)
					1 lbp -=
					0 lbp@ sb
					1 linelen -=
				end

				1 incomment!
			end elseif (c@ ' ' == linestart@ &&)
				// nada
			end else
				0 linestart!

				c@ lbp@ sb
				1 lbp +=
				1 linelen +=
			end
		end

		1 buf +=
		1 count -=
	end

	if (linelen@)
		0 lbp@ sb

		// call the callback

		LdrResourceFileLineBuffer // linebuf
		callback@ LdrResourceFileCallbackFunction
	end
end