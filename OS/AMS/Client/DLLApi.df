//
// API wrappers for the AMS client DLL.
//

#include "<df>/dragonfruit.h"

#include "<ll>/OSDLL/OS.h"
#include "<ll>/AMS/Ams.h"

#include "<inc>/AmsAPI.h"

#include "Ams.h"

fn AmsQueryUIDByName { name -- uid ok }
	auto txmsg
	AmsMessage_SIZEOF alloc txmsg!

	OSPORT_MESSAGE_REQUEST txmsg@ OSMessageHeader_TypeB + sb
	AMSAPI_QUERY_UID_BY_NAME txmsg@ OSMessageHeader_SubtypeB + sb
	OSNONE txmsg@ OSMessageHeader_Handle + !
	AMSBODYLENGTH txmsg@ OSMessageHeader_LengthI + si

	AmsLock

	AmsSectionBase@ AmsMessageQueryUIDByName_UserName + // dest
	name@ // src
	strcpy

	txmsg@ // rxmsg
	txmsg@ // txmsg
	OSWAIT_TIMEOUTINFINITE // timeout
	AmsApiPort@ // porthandle
	OSPortSendAndWaitReply ok!

	if (ok@)
		AmsUnlock

		return
	end

	txmsg@ AmsMessage_Status + @ ok!

	if (ok@)
		AmsUnlock

		return
	end

	AmsSectionBase@ AmsMessageQueryUIDByName_UserName + @ uid!

	AmsUnlock
end

fn AmsQueryGIDByName { name -- gid ok }
	auto txmsg
	AmsMessage_SIZEOF alloc txmsg!

	OSPORT_MESSAGE_REQUEST txmsg@ OSMessageHeader_TypeB + sb
	AMSAPI_QUERY_GID_BY_NAME txmsg@ OSMessageHeader_SubtypeB + sb
	OSNONE txmsg@ OSMessageHeader_Handle + !
	AMSBODYLENGTH txmsg@ OSMessageHeader_LengthI + si

	AmsLock

	AmsSectionBase@ AmsMessageQueryGIDByName_GroupName + // dest
	name@ // src
	strcpy

	txmsg@ // rxmsg
	txmsg@ // txmsg
	OSWAIT_TIMEOUTINFINITE // timeout
	AmsApiPort@ // porthandle
	OSPortSendAndWaitReply ok!

	if (ok@)
		AmsUnlock

		return
	end

	txmsg@ AmsMessage_Status + @ ok!

	if (ok@)
		AmsUnlock

		return
	end

	AmsSectionBase@ AmsMessageQueryGIDByName_GroupName + @ gid!

	AmsUnlock
end