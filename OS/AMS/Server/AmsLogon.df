//
// AMS log-on management.
//

#include "<df>/dragonfruit.h"

#include "<ll>/OSDLL/OS.h"
#include "<ll>/OSDLL/OSCrypt.h"

#include "<inc>/AmsAPI.h"

#include "Ams.h"

fn AmsCheckPassword { password userpass -- ok }
	auto hash
	16 alloc hash!

	password@ // string
	userpass@ gi // salt
	hash@ // hash
	OSSimpleCrypt

	if (hash@ userpass@ strcmp ~~)
		STATUS_INCORRECT_PASSWORD ok!
		return
	end

	0 ok!
end

fn AmsInternalLogon { flags password uid processhandle -- ok }
	// only the system can validate a logon since anyone else can be snooped
	// on or malicious.

	SYSTEMPERMISSION_SYSTEM // permission
	processhandle@ // processhandle
	OSCheckPermission ok!

	if (ok@)
		return
	end

	auto userptr
	uid@ AmsDbUserGetByUID ok! userptr!

	if (ok@)
		return
	end

	auto userpass
	"password" // property
	userptr@ // userptr
	AmsDbUserGetProperty ok! userpass!

	if (ok@)
		return
	end

	if (userpass@ "none" strcmp)
		STATUS_INCORRECT_PASSWORD ok!
		return
	end

	password@ // password
	userpass@ // userpass
	AmsCheckPassword ok!
end

fn AmsInternalChangePassword { oldpassword newpassword uid processhandle -- ok }
	auto notadmin

	SYSTEMPERMISSION_ADMIN // permission
	processhandle@ // processhandle
	OSCheckPermission notadmin!

	if (notadmin@)
		// not admin, check if same UID at least

		auto pinfo
		OSObjectQuery_SIZEOF alloc pinfo!

		processhandle@ // handle
		pinfo@ // query
		OSQuery ok!

		if (ok@)
			return
		end

		if (pinfo@ OSObjectQuery_UID + @ uid@ ~=)
			// not same UID; can't change password even if we have the correct
			// old password.

			STATUS_PERMISSION_DENIED ok!

			return
		end
	end

	auto userptr
	uid@ AmsDbUserGetByUID ok! userptr!

	if (ok@)
		return
	end

	if (notadmin@ uid@ UID_SYSTEM == ||)
		auto userpass
		"password" // property
		userptr@ // userptr
		AmsDbUserGetProperty ok! userpass!

		if (ok@)
			return
		end

		if (uid@ UID_SYSTEM ~=)
			if (userpass@ "none" strcmp)
				STATUS_INCORRECT_PASSWORD ok!
				return
			end
		end

		oldpassword@ // password
		userpass@ // userpass
		AmsCheckPassword ok!

		if (ok@)
			return
		end
	end

	auto hash
	16 alloc hash!

	auto ms
	auto sec

	OSQueryTime ms! sec!

	sec@ ms@ ^ ms!

	auto sb0
	ms@ 63 & '.' + sb0!

	auto sb1
	ms@ 6 >> 63 & '.' + sb1!

	if (sb0@ '9' >)
		7 sb0 +=
	end
	if (sb0@ 'Z' >)
		6 sb0 +=
	end
	if (sb1@ '9' >)
		7 sb1 +=
	end
	if (sb1@ 'Z' >)
		6 sb1 +=
	end

	auto salt
	sb0@ sb1@ 8 << | salt!

	newpassword@ // string
	salt@ // salt
	hash@ // hash
	OSSimpleCrypt

	hash@ // value
	"password" // property
	userptr@ // userptr
	AmsDbUserSetProperty ok!

	if (ok@)
		return
	end

	AmsDbUserWrite ok!
end