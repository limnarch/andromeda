#include "<df>/dragonfruit.h"

#include "<ll>/OSDLL/OS.h"

#include "<ll>/OSDLL/OSVideoControl.h"

var Seed 0x12AB34CD

fn SimpleRandom { -- num }
	Seed@ num!

	num@ 1103515245 * 12345 + 0xFFFFFFFF % num!

	num@ Seed!
end

buffer TestBuffer 8192

fn SetSystemConsole { path -- ok }
	auto handle
	0 // flags
	ACCESS_READ ACCESS_WRITE | // access
	path@ // path
	0 // ftype
	OSFileOpen ok! handle!

	if (ok@ ~~)
		handle@ OSSetSystemConsole ok!

		if (ok@)
			ok@ OSStatusGetName "SystemInit: failed to set system console: %s\n" OSAbort
		end

		handle@ OSSetStdOut
		handle@ OSSetStdErr
		handle@ OSSetStdIn

		path@ "SystemInit: set '%s' as system console\n" Printf
	end
end

fn TrySystemConsole { -- ok }
	"//:/Devices/ttyV0" // path
	SetSystemConsole ok!

	if (ok@ ~~)
		return
	end

	"//:/Devices/ttyS0" // path
	SetSystemConsole ok!

	if (ok@ ~~)
		return
	end

	"//:/Devices/ttyS1" // path
	SetSystemConsole ok!
end

fn Main { ... -- ret }
	TrySystemConsole ret!

	if (ret@)
		ret@ OSStatusGetName "SystemInit: failed to set system console: %s\n" OSAbort
	end

	"\nSystemInit: Hello from dynamically-linked, demand-paged userspace!\n" Printf

	"SystemInit: creating swapfile as //:/Devices/dks2.
Eventually it will be configurable and will be /mintia/SwapFile.sys by default,
and will be able to prompt the user for a swapfile path upon failure.\n" Printf

	auto handle

	0 // flags
	ACCESS_READ ACCESS_WRITE | // access
	"//:/Devices/dks2" // path
	0 // ftype
	OSFileOpen ret! handle!

	if (ret@)
		ret@ OSStatusGetName "SystemInit: failed to open swapfile: %s\n" OSAbort
	end

	handle@ // filehandle
	OSSwapFileCreate ret!

	if (ret@)
		ret@ OSStatusGetName "SystemInit: failed to create swapfile: %s\n" OSAbort
	end

	auto query
	OSFileInformation_SIZEOF alloc query!

	handle@ // filehandle
	query@ // query
	OSFileQuery ret!

	if (ret@)
		ret@ OSStatusGetName "SystemInit: failed to query swapfile: %s\n" OSAbort
	end

	handle@ OSClose drop

	// aim to swap out 32/128 = 25% of evicted pages.
	// before this call, the swappiness starts at 0, which means swap is never
	// used.
	32 OSSetSwappiness ret!

	if (ret@)
		ret@ OSStatusGetName "SystemInit: failed to set swappiness: %s\n" OSAbort
	end

	query@ OSFileInformation_Size + @ OSPAGESHIFT >>
	query@ OSFileInformation_Size + @
	"SystemInit.exe: swapfile is %d bytes (%d pages).\n" Printf

	if (0)
		// serial tty test

		0 // flags
		ACCESS_READ ACCESS_WRITE | // access
		"//:/Devices/ttyS0" // path
		0 // ftype
		OSFileOpen ret! handle!

		if (ret@)
			ret@ OSStatusGetName "SystemInit: failed to open e: %s\n" OSAbort
		end

		handle@ OSSetStdOut

		while (1)
			OSWAIT_TIMEOUTINFINITE // timeout
			0 // flags
			8191 // length
			TestBuffer // buffer
			handle@ // filehandle
			OSFileRead ret! written!

			0 TestBuffer written@ + sb

			TestBuffer "read %s\n" Printf
			written@ "read %d bytes\n" Printf
			ret@ OSStatusGetName "status: %s\n" Printf
		end
	end

	if (0)
		// framebuffer mmap test

		0 // flags
		ACCESS_READ ACCESS_WRITE | // access
		"//:/Devices/kinnowfb0" // path
		0 // ftype
		OSFileOpen ret! handle!

		if (ret@)
			ret@ OSStatusGetName "SystemInit: failed to open e: %s\n" OSAbort
		end

		OSVideoQuery_SIZEOF alloc query!

		query@ // arg2
		OSVIDEOIOCONTROL_QUERY // arg1
		handle@ // filehandle
		OSIOControl ret! drop

		if (ret@)
			ret@ OSStatusGetName "SystemInit: failed to get video parameters: %s\n" OSAbort
		end

		query@ OSVideoQuery_Height + @
		query@ OSVideoQuery_Width + @ "%dx%d\n" Printf

		ACCESS_READ ACCESS_WRITE | // pageprotection
		0 // anonsize
		handle@ // filehandle
		ACCESS_OWNER_ALL // permissions
		0 // name
		OSSectionCreate ret! handle2!

		if (ret@)
			ret@ OSStatusGetName "SystemInit: failed to make section: %s\n" OSAbort
		end

		query@ OSVideoQuery_Width + @ query@ OSVideoQuery_Height + @ * 2 * // length
		HEAPSTART // startva
		0 // sectionoffset
		handle2@ // sectionhandle
		OSCURRENTPROCESS // processhandle
		PAGEACCESS_READ PAGEACCESS_WRITE | PAGEACCESS_NONCACHED | // pageprotection
		0 // flags
		OSSectionMapView ret! realva!

		if (ret@)
			ret@ OSStatusGetName "SystemInit: failed to map section: %s\n" OSAbort
		end

		while (1)
			query@ OSVideoQuery_Width + @ query@ OSVideoQuery_Height + @ * 2 * hugeareasize!
			realva@ ptr!

			while (hugeareasize@)
				SimpleRandom ptr@!

				4 hugeareasize -=
				4 ptr +=
			end
		end
	end

	if (0)
		// usermode mutex test

		ACCESS_OWNER_ALL // permissions
		0 // name
		OSMutexCreate ret! handle!

		if (ret@)
			ret@ OSStatusGetName "failed to create: %s\n" OSAbort
		end

		2000 // timeout
		handle@ // objecthandle
		OSWaitForObject ret!

		ret@ OSStatusGetName "hi: %s\n" Printf

		2000 // timeout
		handle@ // objecthandle
		OSWaitForObject ret!

		ret@ OSStatusGetName "hi: %s\n" Printf

		auto handles
		8 alloc handles!

		handle@ handles@!
		handle@ handles@ 4 + !

		OSWAITANY // waittype
		2000 // timeout
		2 // objectcount
		handles@ // objecthandletable
		OSWaitForMultipleObjects ret!

		ret@ OSStatusGetName "hi: %s\n" Printf

		handle@ OSMutexRelease ret!
		ret@ OSStatusGetName "bye: %s\n" Printf

		handle@ OSMutexRelease ret!
		ret@ OSStatusGetName "bye: %s\n" Printf

		handle@ OSMutexRelease ret!
		ret@ OSStatusGetName "bye: %s\n" Printf

		handle@ OSClose drop
	end

	auto realva
	auto hugeareasize
	auto written

	if (0)
		// disk write test

		8192 hugeareasize!
		TestBuffer realva!

		while (hugeareasize@)
			SimpleRandom realva@!

			4 realva +=
			4 hugeareasize -=
		end

		0 // flags
		PAGEACCESS_READ PAGEACCESS_WRITE | // access
		"//:/Devices/dks3" // path
		0 // ftype
		OSFileOpen ret! handle!

		if (ret@)
			ret@ OSStatusGetName "SystemInit.exe: failed to open e: %s\n" OSAbort
		end

		while (1)
			0 // flags
			8192 // length
			TestBuffer // buffer
			handle@ // filehandle
			OSFileWrite ret! written!

			if (written@ 8192 ~=)
				break
			end
		end
	end

	if (0)
		// mmap disk write test

		0 // flags
		PAGEACCESS_READ PAGEACCESS_WRITE | // access
		"//:/Devices/dks3" // path
		0 // ftype
		OSFileOpen ret! handle!

		if (ret@)
			ret@ OSStatusGetName "SystemInit: failed to open e: %s\n" OSAbort
		end

		auto handle2
		PAGEACCESS_READ PAGEACCESS_WRITE | // pageprotection
		0 // anonsize
		handle@ // filehandle
		ACCESS_OWNER_ALL // permissions
		0 // name
		OSSectionCreate ret! handle2!

		if (ret@)
			ret@ OSStatusGetName "SystemInit: failed to make section: %s\n" OSAbort
		end

		16 1024 * 1024 * // length
		HEAPSTART // startva
		0 // sectionoffset
		handle2@ // sectionhandle
		OSCURRENTPROCESS // processhandle
		PAGEACCESS_READ PAGEACCESS_WRITE | // pageprotection
		0 // flags
		OSSectionMapView ret! realva!

		if (ret@)
			ret@ OSStatusGetName "SystemInit: failed to map section: %s\n" OSAbort
		end

		realva@ "0x%08x\n" Printf

		// extern OSUnmapView { length vaddr processhandle -- ok }

		16 1024 * 1024 * hugeareasize!

		while (hugeareasize@)
			SimpleRandom realva@!

			4 hugeareasize -=
			4 realva +=
		end
	end

	if (0)
		// swap test

		12 1024 * 1024 * hugeareasize!

		auto hugearea
		hugeareasize@ Malloc hugearea!

		hugearea@ "hugearea = 0x%08x\n" Printf

		auto ptr
		hugearea@ ptr!

		while (hugeareasize@)
			SimpleRandom ptr@!

			4 ptr +=
			4 hugeareasize -=
		end

		"wrote a 12MB region with random data even though we don't even have that much RAM!\n" Printf
		"behold the power of swap\n" Printf

		hugearea@ Free
	end

	while (1)
		1000 OSThreadSleep drop
	end
end