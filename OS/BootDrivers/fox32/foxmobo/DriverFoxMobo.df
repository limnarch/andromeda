//
// Implements the fox32 system driver.
//

#include "<df>/dragonfruit.h"

#include "<inc>/HALLog.h"
#include "<inc>/HALDriver.h"
#include "<inc>/HALRTC.h"
#include "<inc>/HALfox32IO.h"
#include "<inc>/HALInterrupt.h"
#include "<inc>/HALCPU.h"

#include "<inc>/Kernel.h"

#include "<ll>/OSDLL/OSStatistics.h"
#include "<ll>/OSDLL/OSContext.h"

const RTC_PORT 0x80000700
const RTC_PORT_YEAR  0
const RTC_PORT_MONTH 1
const RTC_PORT_DAY   2
const RTC_PORT_HOUR  3
const RTC_PORT_MIN   4
const RTC_PORT_SEC   5
const RTC_PORT_UPTME 6

const KBD_PORT 0x80000500

const MSE_PORT 0x80000400
const MSE_PORT_BUTTONS 0
const MSE_PORT_POS     1

fn (HALRTCQueryF) DriverRTCQuery { time -- }
	auto year
	RTC_PORT RTC_PORT_YEAR | HALfox32In year!

	auto month
	RTC_PORT RTC_PORT_MONTH | HALfox32In month!

	if (month@ 2 <=)
		12 month +=
		1 year -=
	end

	auto day
	RTC_PORT RTC_PORT_DAY | HALfox32In day!

	auto hour
	RTC_PORT RTC_PORT_HOUR | HALfox32In hour!

	auto min
	RTC_PORT RTC_PORT_MIN | HALfox32In min!

	auto secpart
	RTC_PORT RTC_PORT_SEC | HALfox32In secpart!

	// years to days
	year@ 365 * year@ 4 / + year@ 100 / - year@ 400 / + day +=

	// months to days
	month@ 30 * month@ 1 + 3 * 5 / + day +=

	// unix epoch
	719561 day -=

	day@ 86400 * secpart +=

	hour@ 3600 * min@ 60 * + secpart +=

	secpart@ time@ KeTime_SecPart + !

	RTC_PORT RTC_PORT_UPTME | HALfox32In 1000 % time@ KeTime_MsPart + !
end

fn (HALUptimeQueryF) DriverRTCUptimeQuery { time -- }
	auto uptime
	RTC_PORT RTC_PORT_UPTME | HALfox32In uptime!

	uptime@ 1000 / time@ KeTime_SecPart + !
	uptime@ 1000 % time@ KeTime_MsPart + !
end

extern FoxDiskInit { -- }

buffer Fox32VsyncDPC KeDPC_SIZEOF

fn (FDriverInit) DriverInit { stage -- ok }
	fnsection "INIT$text"

	if (stage@ STAGE_PRETASKING ==)
		pointerof DriverRTCQuery HALRTCQueryFunction!
		pointerof DriverRTCUptimeQuery HALUptimeQueryFunction!

		pointerof Fox32VsyncDPCFunction // function
		Fox32VsyncDPC // dpc
		KeDPCInitialize

		pointerof Fox32Vsync // handler
		0xFF // int
		IPLHIGH // ipl
		HALInterruptRegister
	end else
		FoxDiskInit
	end

	0 ok!
end

fn Fox32RTCInterrupt { -- }
	// quantum decrement, statistics, etc
end

fn (HALInterruptHandler) Fox32Vsync { trapframe int -- }
	Fox32RTCInterrupt

	auto dpc
	Fox32VsyncDPC dpc!

	if (dpc@ KeDPC_Enqueued + @ ~~)
		// defer waking up any blocked readers til later,
		// otherwise we will BSOD

		0 // context1
		0 // context2
		DPCLOWIMPORTANCE // importance
		dpc@ // dpc
		KeDPCEnqueue
	end
end

fn (DPCFunction) Fox32VsyncDPCFunction { context1 context2 -- }
	Fox32MousePoll
	Fox32KeyboardPoll
end

var Fox32MouseButtonLast 0
var Fox32MousePosLast 0

fn Fox32MousePoll { -- }
	auto mousebutton
	MSE_PORT MSE_PORT_BUTTONS | HALfox32In mousebutton!

	auto mousepos
	MSE_PORT MSE_PORT_POS | HALfox32In mousepos!

	if (mousebutton@ Fox32MouseButtonLast@ ~=)
		mousebutton@ "b%d " Printf

		mousebutton@ Fox32MouseButtonLast!
	end

	if (mousepos@ Fox32MousePosLast@ ~=)
		mousepos@ 16 >>
		mousepos@ 0xFFFF &
		"%d,%d " Printf
		
		mousepos@ Fox32MousePosLast!
	end
end

fn Fox32KeyboardPoll { -- }
	while (1)
		auto scan
		KBD_PORT HALfox32In scan!

		if (scan@ ~~)
			break
		end

		scan@ "k%d " Printf
	end
end