//
// Implements the LIMNstation RTC driver.
//

#include "<df>/dragonfruit.h"

#include "<ll>/rta3x/a3x.h"

#include "<inc>/HALLog.h"
#include "<inc>/HALDriver.h"
#include "<inc>/HALRTC.h"
#include "<inc>/HALLIMNstationCitron.h"
#include "<inc>/HALInterrupt.h"
#include "<inc>/HALCPU.h"

#include "<inc>/Kernel.h"

#include "<ll>/OSDLL/OSStatistics.h"

const RTCPORTCMD   0x20
const RTCPORTDATA  0x21
const RTCINTERRUPT 1

const RTCCMDINTERVAL 1
const RTCCMDQUERYSEC 2
const RTCCMDQUERYMS  3

buffer DriverRTCTimeCurrent KeTime_SIZEOF
buffer DriverRTCUptime      KeTime_SIZEOF

extern DriverRTCInterrupt { int -- }

fn (FDriverInit) DriverInit { stage -- ok }
	if (stage@ STAGE_PRETASKING ==)
		// start the clock interrupt

		pointerof DriverRTCInterrupt // function
		RTCINTERRUPT // interrupt number
		IPLCLOCK // interrupt priority level
		HALInterruptRegister

		HALRTCINTERVAL RTCPORTDATA HALLIMNstationCitronOutl
		RTCCMDINTERVAL RTCPORTCMD HALLIMNstationCitronCommand

		DriverRTCTimeCurrent DriverRTCQuerySlow

		pointerof DriverRTCQuery HALRTCQueryFunction!
		pointerof DriverRTCUptimeQuery HALUptimeQueryFunction!
	end

	0 ok!
end

fn (HALRTCQueryF) DriverRTCQuery { time -- }
	auto ctime
	DriverRTCTimeCurrent ctime!

	ctime@ KeTime_SecPart + @ time@ KeTime_SecPart + !
	ctime@ KeTime_MsPart + @ time@ KeTime_MsPart + !
end

fn (HALUptimeQueryF) DriverRTCUptimeQuery { time -- }
	auto ctime
	DriverRTCUptime ctime!

	ctime@ KeTime_SecPart + @ time@ KeTime_SecPart + !
	ctime@ KeTime_MsPart + @ time@ KeTime_MsPart + !
end

fn DriverRTCQuerySlow { time -- }
	auto rs
	HALCPUInterruptDisable rs!

	RTCCMDQUERYSEC RTCPORTCMD HALLIMNstationCitronCommand
	RTCPORTDATA HALLIMNstationCitronInl time@ KeTime_SecPart + !

	RTCCMDQUERYMS RTCPORTCMD HALLIMNstationCitronCommand
	RTCPORTDATA HALLIMNstationCitronInl time@ KeTime_MsPart + !

	rs@ HALCPUInterruptRestore
end

externptr KeIPLCurrent

externptr KeTimerExpirationEarliest
externptr KeTimerExpirationDPC

fn (HALInterruptHandler) DriverRTCInterrupt { int -- }
	int@ HALPlatformInterruptAcknowledge

	1 KeStatistics OSStatistics_ClockTicks + +=

	HALRTCINTERVAL DriverRTCUptime KeTimeAddMs

	auto currenttime
	DriverRTCTimeCurrent currenttime!

	currenttime@ DriverRTCQuerySlow

	auto expdpc
	KeTimerExpirationDPC expdpc!

	if (expdpc@ KeDPC_Enqueued + @ ~~)
		if (KeTimerExpirationEarliest DriverRTCUptime KeTimeCompare TIMEEARLIER ==)
			0 // context1
			0 // context2
			DPCLOWIMPORTANCE // importance
			expdpc@ // dpc
			KeDPCEnqueue
		end
	end

	auto cth
	KeThreadCurrent@ cth!

	if (cth@)
		auto qt
		cth@ KeThread_Quantum + @ qt!

		if (qt@ QUANTUMUNITSPERTICK <=)
			0 qt!
		end else
			QUANTUMUNITSPERTICK qt -=
		end

		if (qt@ ~~)
			KeThreadQuantumDPC expdpc!

			if (expdpc@ KeDPC_Enqueued + @ ~~)
				0 // context1
				0 // context2
				DPCLOWIMPORTANCE // importance
				expdpc@ // dpc
				KeDPCEnqueue
			end
		end

		qt@ cth@ KeThread_Quantum + !
	end
end