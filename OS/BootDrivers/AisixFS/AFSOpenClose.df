//
// Implements the Open and Close dispatch routines for the AisixFS driver.
//

#include "<df>/dragonfruit.h"

#include "<ll>/OSDLL/OS.h"

#include "<inc>/HALLog.h"
#include "<inc>/HALDriver.h"
#include "<inc>/HALRTC.h"
#include "<inc>/HALInterrupt.h"
#include "<inc>/HALCPU.h"
#include "<inc>/HALMap.h"

#include "<inc>/Kernel.h"

#include "<inc>/Executive.h"

#include "<inc>/Security.h"

#include "<inc>/Memory.h"

#include "<inc>/Process.h"

#include "<inc>/IO.h"

#include "<inc>/FSRTL.h"

#include "AisixFS.h"

fn (IODispatchOpenFunction) AFSOpen { access fileobject -- ok }
	0 ok!

	auto mount
	fileobject@ IOFileGetFileControlBlock IOFileControlBlockGetMount mount!

	auto mountctx
	mount@ IOMountGetContext mountctx!

	if (access@ ACCESS_WRITE &)
		auto rs
		HALCPUInterruptDisable rs!

		if (mount@ IOMountGetFlags OSMOUNT_READONLY &)
			rs@ HALCPUInterruptRestore

			STATUS_READONLY_FILESYSTEM ok!

			return
		end

		1 mountctx@ AFSData_WritableFiles + +=

		rs@ HALCPUInterruptRestore
	end
end

fn (IODispatchCloseFunction) AFSClose { access fileobject -- ok }
	0 ok!

	auto fcb
	fileobject@ IOFileGetFileControlBlock fcb!

	auto mount
	fcb@ IOFileControlBlockGetMount mount!

	auto mountctx
	mount@ IOMountGetContext mountctx!

	if (fileobject@ IOFile_Flags + @ OSFILEFLAG_SWAPFILE & ~~)
		// keep the writable file count biased if there's a swapfile, since
		// the system still has a reference out for this file.

		if (access@ ACCESS_WRITE &)
			auto rs
			HALCPUInterruptDisable rs!

			if (DEBUGCHECKS)
				if (mountctx@ AFSData_WritableFiles + @ 0 ==)
					"AFSClose: underflow\n" KeCrash
				end
			end

			1 mountctx@ AFSData_WritableFiles + -=

			rs@ HALCPUInterruptRestore
		end
	end

	if (fileobject@ IOFileGetContext AFSFILECONTEXT_UPDATEONCLOSE &)
		fcb@ IOFileControlBlockLock ok!

		if (ok@)
			// failed to lock. pretend nothing happened and return.
			0 ok!
			return
		end

		fcb@ AFSINodeUpdate

		fcb@ IOFileControlBlockUnlock

		AFSFILECONTEXT_UPDATEONCLOSE ~ fileobject@ IOFileGetContext & fileobject@ IOFileSetContext
	end
end