//
// Implements file management for the FAT driver.
//

#include "<df>/dragonfruit.h"

#include "<ll>/OSDLL/OS.h"

#include "<inc>/HALLog.h"
#include "<inc>/HALDriver.h"
#include "<inc>/HALRTC.h"
#include "<inc>/HALInterrupt.h"
#include "<inc>/HALCPU.h"
#include "<inc>/HALMap.h"

#include "<inc>/Kernel.h"

#include "<inc>/Executive.h"

#include "<inc>/Memory.h"

#include "<inc>/IO.h"

#include "<inc>/FSRTL.h"

#include "<inc>/ViewCache.h"

#include "Fat.h"

fn (IODispatchPokeFunction) FatPoke { poketype object -- }
	// this function gives us a chance to update timestamps when an operation
	// occurs that might bypass us entirely i.e. a fully cached read or write.

end

fn (IODispatchSetSecurityFunction) FatSetSecurity { uid gid permissions object -- ok }
	fnsection "PAGE$text"

	STATUS_NOT_IMPLEMENTED ok!
end

fn FatFCBCacheFlush { destroy mount -- ok }
	fnsection "PAGE$text"

	STATUS_NOT_IMPLEMENTED ok!
end

fn (IOFilesystemReclaimFunction) FatFCBReclaim { preferredcount fsdeviceobject -- actualcount }
	fnsection "PAGE$text"

	0 actualcount!
end