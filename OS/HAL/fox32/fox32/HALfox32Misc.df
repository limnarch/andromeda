#include "<df>/dragonfruit.h"
#include "<inc>/HALCrash.h"

#include "<inc>/HALCPU.h"
#include "<inc>/HALMap.h"
#include "<inc>/HALInterrupt.h"
#include "<inc>/HALIPL.h"

#include "<inc>/HALDebug.h"

#include "<ll>/OSDLL/OS.h"

// was once HALLimn2500Exception.df until that stuff was moved into the kernel

extern HALMain { -- }

externptr KeThreadCurrentStackTop

externptr KeIPLCurrent

asm "

_start:
.global _start
	jmp HALMain

.entry _start

; -- sp
HALCPUGetSP:
.global HALCPUGetSP
	mov  a0, sp
	ret

HALfox32InterruptsDisabled:
.global HALfox32InterruptsDisabled
	.dl 1

; -- rs
HALCPUInterruptDisable:
.global HALCPUInterruptDisable
	icl

	mov  a0, [HALfox32InterruptsDisabled]
	mov  [HALfox32InterruptsDisabled], 1

	ret

; rs --
HALCPUInterruptRestore:
.global HALCPUInterruptRestore
	icl

	mov  [HALfox32InterruptsDisabled], a0

	cmp  a0, 1
	ifz  jmp .dontenable
	cmp  [KeIPLCurrent], IPLDPC
	ifgt jmp .dontenable

	ise

.dontenable:
	ret

; --
HALCPUInterruptEnable:
.global HALCPUInterruptEnable
	icl

	mov  [HALfox32InterruptsDisabled], 0

	cmp  [KeIPLCurrent], IPLDPC
	ifgt jmp .dontenable

	ise

.dontenable:
	ret

; old new -- 
HALCPUContextSwitch:
.global HALCPUContextSwitch
	sub  sp, 5 ;skip eflagsB and badaddr
	push fp
	push r31
	push tp
	push at
	push s17
	push s16
	push s15
	push s14
	push s13
	push s12
	push s11
	push s10
	push s9
	push s8
	push s7
	push s6
	push s5
	push s4
	push s3
	push s2
	push s1
	push s0
	push a3
	push a2
	push a1
	push a0
	push t6
	push t5
	push t4
	push t3
	push t2
	push t1
	push t0

	mov  [a1], sp
	mov  sp, a0

	pop  t0
	pop  t1
	pop  t2
	pop  t3
	pop  t4
	pop  t5
	pop  t6
	pop  a0
	pop  a1
	pop  a2
	pop  a3
	pop  s0
	pop  s1
	pop  s2
	pop  s3
	pop  s4
	pop  s5
	pop  s6
	pop  s7
	pop  s8
	pop  s9
	pop  s10
	pop  s11
	pop  s12
	pop  s13
	pop  s14
	pop  s15
	pop  s16
	pop  s17
	pop  at
	pop  tp
	pop  r31
	pop  fp
	add  sp, 5 ;skip eflagsB and badaddr

	mov  esp, [KeThreadCurrentStackTop]

	ret

; MUST BE CALLED WITH INTERRUPTS DISABLED
; asid pgtb --
HALCPUMapSwitch:
.global HALCPUMapSwitch
	tlb  a0
	ret

;sp+4 - teb
;a3 - exit function
;a2 - context
;a1 - ustack
;a0 - usermode entry function
HALCPUEnterUserMode:
.global HALCPUEnterUserMode
	mov  fp, 0

	mov  [HALfox32InterruptsDisabled], 0

	add  sp, 4
	pop  tp

	sub  a1, 4

	push a1
	push a0
	push.8 FOX32_RS_UTHREAD
	mov  a0, a2

	reti

; vpn --
HALfox32TLBFlush:
.global HALfox32TLBFlush
	sla  a0, 12
	flp  a0
	ret

HALDcacheExpunge:
.global HALDcacheExpunge
	ret

HALIcacheSynchronize:
.global HALIcacheSynchronize
	ret

HALCPUFence:
.global HALCPUFence
	ret

"

extern LoadInitialContext { -- }

fn HALCPUASIDRegister { asid -- }
	return
end

fn HALCPUASIDUnregister { asid -- }
	return
end

fn HALCPUAddressSpaceSwitch { asid pdir -- }
	asid@ pdir@ HALCPUMapSwitch
end