//
// Implements the platform-dependent part of interrupt support
//

#include "<ll>/rta3x/a3x.h"
#include "<df>/dragonfruit.h"
#include "../../OSLoader/OSLoaderGlobal.h"

#include "<inc>/HALLog.h"

#include "<inc>/HALMap.h"
#include "<inc>/HALIPL.h"
#include "<inc>/HALInterrupt.h"
#include "<inc>/HALCPU.h"
#include "<inc>/HALCrash.h"

#include "<ll>/OSDLL/OS.h"

var KeIPLCurrent IPLHIGH
public KeIPLCurrent

fn HALPlatformInterruptRegister { handler int ipl -- }
	handler@ IDENTITYSPACE int@ 4 * + !
end

fn HALPlatformInterruptUnregister { int -- }
	auto spf
	pointerof HALfox32InterruptSpurious spf!

	spf@ IDENTITYSPACE int@ 4 * + !
end

fn (HALInterruptHandler) HALfox32InterruptSpurious { trapframe int -- }
	int@ "spurious interrupt: %d\n" HALCrash
end

var HALInterruptNested 0
public HALInterruptNested

externptr HALInterruptStackTop

fn HALInterrupt { trapframe -- }

end

asm "

HALPlatformIPLSet:
.global HALPlatformIPLSet
	cmp  a0, IPLDPC
	ifgt jmp .disable

	ise

	ret

.disable:
	icl

	ret

"