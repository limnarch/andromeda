//
// Initialization of the fox32 HAL.
//

#include "<df>/dragonfruit.h"
#include "../../OSLoader/OSLoaderGlobal.h"

#include "<inc>/HALDriver.h"
#include "<inc>/HALCPU.h"
#include "<inc>/HALMap.h"
#include "<inc>/HALCrash.h"
#include "<inc>/HALLog.h"

#include "<ll>/OSDLL/OS.h"

extern HALMain { ldrinfo -- ret }

externptr HALLoaderInfo

var InfoTotalRAM 0

var HALPlatformKernelPageDirectory 0
public HALPlatformKernelPageDirectory

buffer HALPlatformModel 32
public HALPlatformModel

buffer HALCPUModel 32
public HALCPUModel

buffer HALBusModel 32
public HALBusModel

fn HALPlatformInfo { -- }
	// we're supposed to print platform info in this function

	InfoTotalRAM@ 1048576 /
	"Fox32 (%dMB)" Printf
end

fn HALPlatformInit { ldrinfo -- ret }
	fnsection "INIT$text"

	0 ret!

	HALPlatformModel
	"Fox32"
	strcpy

	HALCPUModel
	"fox32"
	strcpy

	HALBusModel
	"foxbus"
	strcpy

	ldrinfo@ LdrInfo_TotalRAM + @ InfoTotalRAM!

	"Platform: " "HALMain" HALLog
	HALPlatformInfo
end

fn HALPlatformCrash { -- }
	// HALPlatformMapKernelSwitch drop drop
end

extern HALCPUExit { -- }

fn HALPlatformExit { ret mode -- }
	// MUST BE CALLED WITH INTERRUPTS DISABLED

	// HALPlatformMapKernelSwitch drop drop

	// HALCPUExit

#ifdef 0
	if (mode@ OSSHUTDOWN_HALT ==)
		// ret@ HALLoaderInfo@ LoaderInfo_ReturnSP + @ HALLimn2500Exit
	end elseif (mode@ OSSHUTDOWN_REBOOT ==)
		HALLimn2500Reset
	end else
		"?" Printf

		HALLimn2500Reset
	end
#endif

	while (1) end
end