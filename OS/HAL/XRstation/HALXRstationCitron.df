//
// Implements access routines for the citron MMIO range.
//

#include "<ll>/rta3x/a3x.h"
#include "<df>/dragonfruit.h"

#include "../../OSLoader/OSLoaderGlobal.h"

#include "<inc>/HALXRstationCitron.h"

var HALXRstationCitronBase 0

fn HALXRstationCitronInit { ldrinfo -- }
	fnsection "INIT$text"

	ldrinfo@ LdrInfo_CitronBase + @ HALXRstationCitronBase!
end

fn HALXRstationCitronInb { port -- byte }
	port@ 4 * HALXRstationCitronBase@ + gb byte!
end

fn HALXRstationCitronIni { port -- int }
	port@ 4 * HALXRstationCitronBase@ + gi int!
end

fn HALXRstationCitronInl { port -- long }
	port@ 4 * HALXRstationCitronBase@ + @ long!
end

fn HALXRstationCitronOutb { byte port -- }
	byte@ port@ 4 * HALXRstationCitronBase@ + sb
end

fn HALXRstationCitronOuti { int port -- }
	int@ port@ 4 * HALXRstationCitronBase@ + si
end

fn HALXRstationCitronOutl { long port -- }
	long@ port@ 4 * HALXRstationCitronBase@ + !
end

fn HALXRstationCitronWait { port -- }
	port@ 4 * HALXRstationCitronBase@ + port!

	while (port@ gb 0 ~=) end
end

fn HALXRstationCitronCommand { command port -- }
	port@ 4 * HALXRstationCitronBase@ + port!

	while (port@ gb 0 ~=) end

	command@ port@ sb

	while (port@ gb 0 ~=) end
end

// doesn't wait for the device to report the operation as completed before returning
fn HALXRstationCitronCommandASync { command port -- }
	port@ 4 * HALXRstationCitronBase@ + port!

	while (port@ gb 0 ~=) end

	command@ port@ sb
end

fn HALXRstationCitronCommandASyncIdle { command port -- }
	port@ 4 * HALXRstationCitronBase@ + port!

	command@ port@ sb

	auto i
	64 i!

	while (i@)
		1 i -=
	end
end