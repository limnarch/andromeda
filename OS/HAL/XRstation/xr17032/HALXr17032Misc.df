#include "<df>/dragonfruit.h"
#include "<inc>/HALCrash.h"

#include "<inc>/HALCPU.h"
#include "<inc>/HALMap.h"
#include "<inc>/HALInterrupt.h"

#include "<inc>/HALDebug.h"

#include "<ll>/OSDLL/OS.h"

// was once HALXr17032Exception.df until that stuff was moved into the kernel

asm "

; -- sp
HALCPUGetSP:
.global HALCPUGetSP
	mov  a0, sp
	ret

; -- rs
HALCPUInterruptDisable:
.global HALCPUInterruptDisable
	mfcr a0, rs
	subi t1, zero, 3
	and  t1, a0, t1 ; disable interrupts
	mtcr rs, t1
	ret

; rs --
HALCPUInterruptRestore:
.global HALCPUInterruptRestore
	mtcr rs, a0
	ret

; --
HALCPUInterruptEnable:
.global HALCPUInterruptEnable
	mfcr t0, rs
	ori  t0, t0, XR17032_RS_INT
	mtcr rs, t0
	ret

; old new -- 
HALCPUContextSwitch:
.global HALCPUContextSwitch
	subi sp, sp, OSContext_SIZEOF

	mov  long [sp + OSContext_lr],  lr
	mov  long [sp + OSContext_s0],  s0
	mov  long [sp + OSContext_s1],  s1
	mov  long [sp + OSContext_s2],  s2
	mov  long [sp + OSContext_s3],  s3
	mov  long [sp + OSContext_s4],  s4
	mov  long [sp + OSContext_s5],  s5
	mov  long [sp + OSContext_s6],  s6
	mov  long [sp + OSContext_s7],  s7
	mov  long [sp + OSContext_s8],  s8
	mov  long [sp + OSContext_s9],  s9
	mov  long [sp + OSContext_s10], s10
	mov  long [sp + OSContext_s11], s11
	mov  long [sp + OSContext_s12], s12
	mov  long [sp + OSContext_s13], s13
	mov  long [sp + OSContext_s14], s14
	mov  long [sp + OSContext_s15], s15
	mov  long [sp + OSContext_s16], s16
	mov  long [sp + OSContext_s17], s17
	mov  long [sp + OSContext_s18], tp

	mov  long [a1], sp
	mov  sp, a0

	mov  s0,  long [sp + OSContext_s0]
	mov  s1,  long [sp + OSContext_s1]
	mov  s2,  long [sp + OSContext_s2]
	mov  s3,  long [sp + OSContext_s3]
	mov  s4,  long [sp + OSContext_s4]
	mov  s5,  long [sp + OSContext_s5]
	mov  s6,  long [sp + OSContext_s6]
	mov  s7,  long [sp + OSContext_s7]
	mov  s8,  long [sp + OSContext_s8]
	mov  s9,  long [sp + OSContext_s9]
	mov  s10, long [sp + OSContext_s10]
	mov  s11, long [sp + OSContext_s11]
	mov  s12, long [sp + OSContext_s12]
	mov  s13, long [sp + OSContext_s13]
	mov  s14, long [sp + OSContext_s14]
	mov  s15, long [sp + OSContext_s15]
	mov  s16, long [sp + OSContext_s16]
	mov  s17, long [sp + OSContext_s17]
	mov  tp,  long [sp + OSContext_s18]
	mov  lr,  long [sp + OSContext_lr]

	addi sp, sp, OSContext_SIZEOF

	ret

;a0 - asid
;a1 - vpn
;a2 - pte
HALXr17032TLBFill:
.global HALXr17032TLBFill
	lshi t0, a1, 12
	mtcr itbctrl, t0
	mtcr dtbctrl, t0

	ret

HALXr17032TLBFlushAll:
.global HALXr17032TLBFlushAll
	li   t0, 2
	mtcr itbctrl, t0
	mtcr dtbctrl, t0

	ret

HALXr17032TLBFlush:
.global HALXr17032TLBFlush
	lshi t0, a1, 12
	mtcr itbctrl, t0
	mtcr dtbctrl, t0

	ret

HALDcacheExpunge:
.global HALDcacheExpunge
	wmb
	li   t0, 3
	mtcr dcachectrl, t0
	ret

HALIcacheSynchronize:
.global HALIcacheSynchronize
	wmb
	li   t0, 3
	mtcr icachectrl, t0
	ret

HALCPUFence:
.global HALCPUFence
	mb
	ret

"

extern HALXr17032TLBFlush { vpn asid -- }
extern HALXr17032TLBFlushAll { -- }

extern LoadInitialContext { -- }