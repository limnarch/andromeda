//
// Implements the HAL debugger entrypoints.
//

#include "<df>/dragonfruit.h"
#include "../../OSLoader/OSLoaderGlobal.h"

#include "<inc>/HALLog.h"
#include "<inc>/HALDebug.h"
#include "<inc>/HALCPU.h"
#include "<inc>/HALMap.h"

var HALDebugDumpFunction 0
public HALDebugDumpFunction

var HALDebuggerFunction 0
public HALDebuggerFunction

externptr HALLoaderInfo

fnptr DebugInit { ldrinfo -- }

fn HALDebugInit { ldrinfo -- }
	auto di
	ldrinfo@ LdrInfo_DebugInit + @ di!

	if (di@)
		ldrinfo@ di@ DebugInit
	end
end

fnptr DebugMain { -- }

fn HALDebug { -- ran }
	auto debugger
	HALDebuggerFunction@ debugger!

	0 ran!

	if (debugger@)
		1 ran!

		auto rs
		HALCPUInterruptDisable rs!

		debugger@ DebugMain

		rs@ HALCPUInterruptRestore
	end
end

fnptr DebugDump { rows cols -- }

extern HALPlatformDebugDump { rows cols -- }

fn HALDebugDump { rows cols -- }
	if (rows@ 5 >=)
		"\n" Printf

		1 rows -=

		auto infocols
		cols@ 40 / infocols!

		auto i
		infocols@ i!

		while (i@)
			"DLL Base TimeStmp Name                 " Printf
			1 i -=
		end

		"\n" Printf

		1 rows -=

		auto dll
		HALLoaderInfo@ LdrInfo_DLLListHead + @ dll!

		while (dll@ rows@ &&)
			infocols@ i!

			while (dll@ i@ &&)
				dll@ LdrModule_Name +
				dll@ LdrModule_Timestamp + @
				dll@ LdrModule_Base + @
				"%08x %08x %20s " Printf

				1 i -=
				dll@ LdrModule_Next + @ dll!
			end

			"\n" Printf

			1 rows -=
		end
	end

	auto dbg
	HALDebugDumpFunction@ dbg!

	if (dbg@)
		// do whatever fancy thing the installed debugger has in mind
		rows@ cols@ dbg@ DebugDump
	end else
		// do the platform's generic debug dump
		rows@ cols@ HALPlatformDebugDump
	end
end